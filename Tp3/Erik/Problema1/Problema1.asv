

%% Punto b)
clear all;
close all;
N = 20000;
SNR = 20;
[X,S,V,U] = armar_seniales(N, SNR);

figure()
hold on
plot(V);
plot(U);
legend('V','U')

figure()
plot(S);

figure()
plot(X);

%% Punto c)
clear all;
close all;

N = 20000;
SNR = 20;

mu = 50;
w0 = [5 5 5 5 5]'; % valores iniciales del filtro
[M,L] = size(w0);

realizaciones = 500;
J_est = zeros(N,1);
Err_est = zeros(N,1);

for i = 1:realizaciones
    
    [X,S,V,U] = armar_seniales(N, SNR);
    [W, V_est] = filtro1(S, V, U, mu, w0);
 
    S_est = (X - V_est);
    Err_est = Err_est + (S_est - S).^2/realizaciones;
    J_est = J_est + (V_est - V).^2/realizaciones;
    
    % Para debuggear
    if i == 1
        figure()
        plot(V_est)
        hold on
        plot(V);
        legend('V_est','V')
        
        figure()
        plot(S_est)
        hold on
        plot(S);
        legend('S_est','S')
        
        figure()
        plot(Err_est)
        figure()
        plot(J_est)
    end
end

figure()
plot(Err_est)
figure()
plot(J_est)

figure()
hold on
for i = 1:M
    plot(W(i,:))
end

%% d)
clear all;
close all;

M = 5;
N = 20000;
SNR = 20;

mu = 50;
w0 = [];
convergencia_err = 7000;
realizaciones = 500;
E = zeros(M, 1);

for m = 1:M
    J_est = zeros(N,1);
    Err_est = zeros(N,1);
    w0 = [w0 5]';
    for i = 1:realizaciones
        [X,S,V,U] = armar_seniales(N, SNR);
        [W, V_est] = filtro1(S, V, U, mu, w0);

        S_est = (X - V_est);
        Err_est = Err_est + (S_est - S).^2/realizaciones;
        J_est = J_est + (V_est - V).^2/realizaciones;
    end
    E(m) = mean(Err_est(convergencia_err:end));
end

plot(E);

%% e)
clear all;
close all;

N = 20000;
SNR = 20;

w0 = [5 5]';
convergencia_err = 7000;
realizaciones = 500;
E = zeros(7, 1);
index = 1;

figure()
hold on
lgd = cell(n,1) ;
for mu = 30:10:100
    J_est = zeros(N,1);
    Err_est = zeros(N,1);
    for i = 1:realizaciones
        [X,S,V,U] = armar_seniales(N, SNR);
        [W, V_est] = filtro1(S, V, U, mu, w0);

        S_est = (X - V_est);
        Err_est = Err_est + (S_est - S).^2/realizaciones;
        J_est = J_est + (V_est - V).^2/realizaciones;
    end
    
    E(index) = mean(Err_est(convergencia_err:end));
    index = index +1;
    
    plot(Err_est);
end
legend('');
figure()
plot(E);