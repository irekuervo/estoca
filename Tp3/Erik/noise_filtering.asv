function [W, V_est] = noise_filtering(S, V, U, mu, w0)

X = S + V;

[N,L] = size(S);
[M,L] = size(w0);
W = zeros(M,N);
W(:,1) = w0;
V_est = zeros(N,1);

for k = 1 : N - 1
    indice_M = k + M - 1;
    
    if indice_M <= N
        V_est(k) = U(k:indice_M)'*W(:,k);
        error = X(k) - V_est(k);
        W(:,k+1) = W(:,k) + mu * U(k : indice_M) * error;
    else 
        V_est(k) = U(k:N)'*W(:,k);
        W(:,k+1) = W(:,k); % los ultimos directamente los copio para no hacer zero padding
    end
end

end

